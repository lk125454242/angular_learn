/**
 *  Do not remove this comments bellow. It's the markers used by wiredep to inject
 *  less dependencies when defined in the bower.json of your dependencies
 */
// bower:less
// endbower

/**
 *  If you want to override some bootstrap variables, you have to change values here.
 *  The list of variables are listed here bower_components/bootstrap/less/variables.less
 */
@navbar-inverse-link-color: #5AADBB;

/**
 *  Font-Awesome support
 *  Source: https://github.com/Swiip/generator-gulp-angular/issues/337
 */

@import "../../bower_components/fontawesome/less/font-awesome.less";
@fa-font-path: "../../bower_components/fontawesome/fonts";

@import '../../bower_components/bootstrap/less/bootstrap.less';
@icon-font-path: '../../bower_components/bootstrap/fonts/';

.browsehappy {
  margin: 0.2em 0;
  background: #ccc;
  color: #000;
  padding: 0.2em 0;
}

.thumbnail {
  height: 200px;

  img.pull-right {
    width: 50px;
  }
}

@nav-profil-pattern: url("../assets/images/patterns/header-profile.png") no-repeat;
@import "less/style";

/**
 *  Do not remove this comments bellow. It's the markers used by gulp-inject to inject
 *  all your less files automatically
 */
// injector
// endinjector


.v-middle{
  vertical-align: middle !important;
}
.max-100{
    max-width: 100px!important;
    max-height: 100px!important;
}

/* ========================================================================
   Component: form-elements.less
 ========================================================================== */
/**
 * Custom form elements
 *    - Checkbox 
 *    - Radios
 *    - Switch
 *    - Rounded inputs
 */
.c-checkbox,
.c-radio {
  margin-right: 4px;
}
.c-checkbox *,
.c-radio * {
  cursor: pointer;
}
.c-checkbox input,
.c-radio input {
  opacity: 0;
  position: absolute;
  margin-left: 0 !important;
}
.c-checkbox span,
.c-radio span {
  position: relative;
  display: inline-block;
  vertical-align: top;
  margin-left: -20px;
  width: 20px;
  height: 20px;
  border-radius: 2px;
  border: 1px solid #ccc;
  margin-right: 5px;
  text-align: center;
}
.c-checkbox span:before,
.c-radio span:before {
  margin-left: 0;
}
.c-checkbox:hover span,
.c-radio:hover span {
  border-color: #5d9cec;
}
.form-inline .c-checkbox span,
.form-inline .c-radio span {
  margin-left: 0;
}
.c-checkbox.c-checkbox-rounded span,
.c-radio.c-checkbox-rounded span,
.c-checkbox.c-radio-rounded span,
.c-radio.c-radio-rounded span {
  border-radius: 500px;
}
/* override for radio */
.c-radio span {
  border-radius: 500px;
}
/* the icon */
.c-checkbox span:before,
.c-radio span:before {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  opacity: 0;
  text-align: center !important;
  font-size: 12px;
  line-height: 18px;
  vertical-align: middle;
}
/* Checked state */
.c-checkbox,
.c-radio {
  /* override for radio */
  /* Disable state */
  /* override for radio */
}
.c-checkbox input[type=checkbox]:checked + span:before,
.c-radio input[type=checkbox]:checked + span:before,
.c-checkbox input[type=radio]:checked + span:before,
.c-radio input[type=radio]:checked + span:before {
  color: #fff;
  opacity: 1;
  transition: color 0.3s ease-out;
}
.c-checkbox input[type=checkbox]:checked + span,
.c-radio input[type=checkbox]:checked + span,
.c-checkbox input[type=radio]:checked + span,
.c-radio input[type=radio]:checked + span {
  border-color: #5d9cec;
  background-color: #5d9cec;
}
.c-checkbox input[type=radio]:checked + span,
.c-radio input[type=radio]:checked + span {
  background-color: #fff;
}
.c-checkbox input[type=radio]:checked + span:before,
.c-radio input[type=radio]:checked + span:before {
  color: #5d9cec;
}
.c-checkbox input[type=checkbox]:disabled + span,
.c-radio input[type=checkbox]:disabled + span,
.c-checkbox input[type=radio]:disabled + span,
.c-radio input[type=radio]:disabled + span {
  border-color: #dddddd !important;
  background-color: #dddddd !important;
}
.c-checkbox input[type=radio]:disabled + span,
.c-radio input[type=radio]:disabled + span {
  background-color: #fff !important;
}
.c-checkbox input[type=radio]:disabled + span:before,
.c-radio input[type=radio]:disabled + span:before {
  color: #dddddd;
}
.c-radio.c-radio-nofont {
  /* override for radio */
  /* Disable state */
  /* override for radio */
}
.c-radio.c-radio-nofont span:before {
  content: "";
  width: 10px;
  height: 10px;
  top: 50%;
  left: 50%;
  margin-top: -5px;
  margin-left: -5px;
  border-radius: 500px;
}
.c-radio.c-radio-nofont input[type=radio]:checked + span:before {
  color: #fff;
  opacity: 1;
  transition: color 0.3s ease-out;
}
.c-radio.c-radio-nofont input[type=radio]:checked + span {
  border-color: #5d9cec;
  background-color: #5d9cec;
}
.c-radio.c-radio-nofont input[type=radio]:checked + span {
  background-color: #fff;
}
.c-radio.c-radio-nofont input[type=radio]:checked + span:before {
  background-color: #5d9cec;
}
.c-radio.c-radio-nofont input[type=radio]:disabled + span {
  border-color: #dddddd !important;
  background-color: #dddddd !important;
}
.c-radio.c-radio-nofont input[type=radio]:disabled + span {
  background-color: #fff !important;
}
.c-radio.c-radio-nofont input[type=radio]:disabled + span:before {
  background-color: #dddddd;
}

/* UI - tree */
.angular-ui-tree-handle {
    background: none repeat scroll 0 0 #f3f3f4;
    border: 1px dashed #e7eaec;
    color: inherit;
    padding: 10px;
    font-weight: normal;
}
.angular-ui-tree-handle:hover {
    font-weight: bold;
    cursor: pointer;
}
.angular-ui-tree-placeholder {
    background: #f0f9ff;
    border: 1px dashed #bed2db;
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
}
.group-title {
    background-color: #687074 !important;
    color: #FFF !important;
}
.tree-node {
    background: none repeat scroll 0 0 #f3f3f4;
    border: 1px dashed #e7eaec;
    color: inherit;
    padding: 10px;
    border-radius: 3px;
}

.tree-node .btn {
    min-width: 22px;
    margin-right: 4px;
}

.tree-node-content {
    margin: 5px 5px 5px 0;
}

.tree-handle {
    background: none repeat scroll 0 0 #f3f3f4;
    border: 1px dashed #e7eaec;
    color: inherit;
    padding: 10px;
}

.angular-ui-tree-handle:hover {
}

.angular-ui-tree-placeholder {
    background: #f0f9ff;
    border: 1px dashed #bed2db;
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
}
.tree-node span.fa{
  margin-top: -2px;
}
/* 编辑table 样式设置 */
.editable-controls.form-group{
  margin: 12px 2px 0 5px;
}

/* file input 样式 */
.file_input_container{
  position: relative;
  input{
    opacity: 0;
    position: absolute;
    left: 0;
    top: 0;
    height: 100%;
    width: 100%;
  }
}
/* 截图样式 */
@u_corp_width: 400px;
@u_corp_height: (@u_corp_width / 4) * 3;
.u_corp_container{
    overflow: hidden;
    .u_corp_result, .u_corp_source_container{
      height: 100%;
    }
    .u_corp_result{
      line-height: @u_corp_height;
      height: @u_corp_height;
      //box-shadow: inset 0 0 20px #1ab394;
    }
    .u_corp_source{
        width: @u_corp_width;
        height: @u_corp_height;
    }
}